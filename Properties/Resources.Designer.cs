//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FFActCheck.Properties {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FFActCheck.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
        ///   재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Config&gt;
        ///    &lt;SettingsSerializer&gt;
        ///        &lt;CheckBox Name=&quot;cbAutoLoadLogs&quot; Value=&quot;True&quot; /&gt;
        ///        &lt;CheckBox Name=&quot;cbClipAutoConnect&quot; Value=&quot;False&quot; /&gt;
        ///        &lt;NumericUpDown Name=&quot;nudLogFileSplit&quot; Value=&quot;24&quot; /&gt;
        ///        &lt;TextBox Name=&quot;tbClipIP&quot; Value=&quot;192.168.0.2&quot; /&gt;
        ///        &lt;CheckBox Name=&quot;cbOutlineTraces&quot; Value=&quot;False&quot; /&gt;
        ///        &lt;CheckBox Name=&quot;cbPersistantMobs&quot; Value=&quot;False&quot; /&gt;
        ///        &lt;CheckBox Name=&quot;cbRadialDisplay&quot; Value=&quot;False&quot; /&gt;
        ///        &lt;NumericUpDown[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_act {
            get {
                return ResourceManager.GetString("cfg-act", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;Config&gt;
        ///	&lt;SettingsSerializer&gt;
        ///		&lt;ComboBox Name=&quot;LocaleUi&quot; Value=&quot;English&quot; /&gt;
        ///		&lt;ComboBox Name=&quot;LocaleGame&quot; Value=&quot;English&quot; /&gt;
        ///		&lt;ComboBox Name=&quot;LogBackColor&quot; Value=&quot;AliceBlue&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;LoggingWholeFATEs&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;UseOverlay&quot; Value=&quot;True&quot; /&gt;
        ///		&lt;TextBox Name=&quot;OverlayLocation&quot; Value=&quot;1498,0&quot; /&gt;
        ///		&lt;TextBox Name=&quot;SelectedFates&quot; Value=&quot;&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;UseSound&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;TextBox Name=&quot;SoundFi[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_dfa {
            get {
                return ResourceManager.GetString("cfg_dfa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;Config&gt;
        ///	&lt;SettingsSerializer&gt;
        ///		&lt;CheckBox Name=&quot;chkDisableDamageShield&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;ComboBox Name=&quot;cboLanguage&quot; Value=&quot;English&quot; /&gt;
        ///		&lt;ComboBox Name=&quot;cboParseFilter&quot; Value=&quot;Party&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;chkDisableCombinePets&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;chkScanHP&quot; Value=&quot;True&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;chkLogAllNetwork&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;chkDisableCombatLog&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;TextBox Name=&quot;txtLogFileDirectory&quot; Value[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_fcp {
            get {
                return ResourceManager.GetString("cfg-fcp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;Config&gt;
        ///	&lt;SettingsSerializer&gt;
        ///		&lt;NumericUpDown Name=&quot;numericUpDownX&quot; Value=&quot;918&quot; /&gt;
        ///		&lt;NumericUpDown Name=&quot;numericUpDownY&quot; Value=&quot;63&quot; /&gt;
        ///		&lt;TrackBar Name=&quot;trackBarOpacity&quot; Value=&quot;0&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;checkBoxClickthrough&quot; Value=&quot;True&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;checkBoxShowOverlay&quot; Value=&quot;True&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;checkBoxAutoHide&quot; Value=&quot;False&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;checkBoxCheckUpdate&quot; Value=&quot;True&quot; /&gt;
        ///		&lt;CheckBox Name=&quot;checkBoxNotifyStableOnl[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_ping {
            get {
                return ResourceManager.GetString("cfg_ping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_basis_head {
            get {
                return ResourceManager.GetString("cfg_rmop_basis_head", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_basis_tail {
            get {
                return ResourceManager.GetString("cfg_rmop_basis_tail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_item_enmity {
            get {
                return ResourceManager.GetString("cfg_rmop_item_enmity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_item_eureka {
            get {
                return ResourceManager.GetString("cfg_rmop_item_eureka", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_item_fish {
            get {
                return ResourceManager.GetString("cfg_rmop_item_fish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_item_horiz {
            get {
                return ResourceManager.GetString("cfg_rmop_item_horiz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string cfg_rmop_item_kagerou {
            get {
                return ResourceManager.GetString("cfg_rmop_item_kagerou", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CheckRuntime=Check runtime
        ///CreateConfigFile=Create config file
        ///Language=Language
        ///SetRuntime=Set runtime
        ///Title=ACT runtime checker
        ///UseYukkuri=Use Yukkuri
        ///ActLocation=ACT Path
        ///Check=Check
        ///Config=Config
        ///Extra=Extra
        ///// check
        ///ClickCheck=Click check button first!
        ///JunctionOk=Ok
        ///JunctionNotEqual=Indicated another directory or location
        ///JunctionNotJunction=Another program makes this directory
        ///JunctionNotExist=Have to setting up
        ///JunctionFail=Cannot determine setting
        ///ReinstallAct=Invalid ACT installati[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lang_en {
            get {
                return ResourceManager.GetString("Lang_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CheckRuntime=調べる
        ///CreateConfigFile=コンフィグ ファイル
        ///Language=言語
        ///SetRuntime=設定
        ///Title=ACT Runtime チェカー
        ///UseYukkuri=Yukkuri 使用
        ///ActLocation=ACT
        ///Check=チェック
        ///Config=コンフィグ
        ///Extra=その他
        ///// check
        ///ClickCheck=調べるボタンから押してください！
        ///JunctionOk=正常
        ///JunctionNotEqual=他のディレクトリーに指定されています
        ///JunctionNotJunction=他のプログラムで作ったディレクトリーです
        ///JunctionNotExist=設定が必要です
        ///JunctionFail=設定が確認できません
        ///ReinstallAct=ACTの調子がおかしいです。 再設置してください
        ///NeedSettingUp=設定が必要です。設定ボタンを押してください
        ///TestOk=問題なし
        ///TestFail=テスト失敗！
        ///Source=ソース
        ///Target=ターゲット
        ///ConfigPath=コンフィグパース        ///[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lang_ja {
            get {
                return ResourceManager.GetString("Lang_ja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CheckRuntime=검사하기
        ///CreateConfigFile=설정 파일 만들기
        ///Language=언어
        ///SetRuntime=설정하기
        ///Title=ACT 실행 환경 점검
        ///UseYukkuri=Yukkuri 사용
        ///ActLocation=ACT 경로
        ///Check=검사
        ///Config=환경설정
        ///Extra=그밖에
        ///// check
        ///ClickCheck=검사하기 버튼을 먼저 누르세요!
        ///JunctionOk=정상입니다
        ///JunctionNotEqual=다른 위치로 지정되어 있습니다
        ///JunctionNotJunction=다른 프로그램에서 만든 디렉터리입니다
        ///JunctionNotExist=설정이 필요합니다
        ///JunctionFail=설정을 확인할 수 없습니다
        ///ReinstallAct=ACT가 이상합니다. 다시 설치하세요
        ///NeedSettingUp=설정이 필요합니다. 설정하기를 누르세요
        ///TestOk=문제없음
        ///TestFail=검사가 실패함
        ///Source=원본
        ///Target=대상
        ///ConfigPath=환경설정 경로
        ///C[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lang_ko {
            get {
                return ResourceManager.GetString("Lang_ko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap nanamo {
            get {
                object obj = ResourceManager.GetObject("nanamo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
